"""
Реализовать функцию, принимающую два числа (позиционные аргументы)
и выполняющую их деление. Числа запрашивать у пользователя,
предусмотреть обработку ситуации деления на ноль.
"""


def my_func(*args):
    try:
        x = int(input("Введите число 'X'= "))
        y = int(input("Введите число 'Y'= "))
        result = x / y
    except ValueError:
        return 'Введите только число'
    except ZeroDivisionError:
        return 'На ноль делить нельзя'

    return result


print(f'Результат =  {my_func()}')
print()

"""
Выполнить функцию, которая принимает несколько параметров, 
описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Осуществить вывод данных о пользователе одной строкой.
"""


def my_func(name, surname, year, city, email, telephone):
    return ' '.join([name, surname, year, city, email, telephone])


print(my_func(name='Сергей', surname='Рыбников', year='1984', city='Минск', email='how@gmail.com',
              telephone='+375-29-111-11-11'))
print()

"""
Реализовать функцию my_func(), которая принимает три позиционных аргумента
и возвращает сумму наибольших двух аргументов.
"""
num1 = int(input("Введите первое число: "))
num2 = int(input("Введите второе число: "))
num3 = int(input("Введите третье число: "))


def my_func():
    if num1 >= num3 and num2 >= num3:
        return num1 + num2
    elif num1 > num2 and num1 < num3:
        return num1 + num3
    else:
        return num2 + num3


print(f'Результат = {my_func()}')
print()

"""
Программа принимает действительное положительное число x 
и целое отрицательное число y. Выполните возведение числа x в степень y. 
Задание реализуйте в виде функции my_func(x, y). 
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
"""


def my_func(x, y):
    return 1 / x ** abs(y)


print(my_func(2, -4))
print()

"""
Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. 
Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введён после нескольких чисел, 
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
"""


def my_func():
    sum_res = 0
    stop = False
    while stop == False:
        number = input('Введите числа, разделяя их пробелами. Либо q для выхода: ').split()

        res = 0
        for el in range(len(number)):
            if number[el] == 'q':
                stop = True
                break
            else:
                res = res + int(number[el])
        sum_res = sum_res + res
        print(f'Текущая сумма {sum_res}')


my_func()
print()

"""
Реализовать функцию int_func(), принимающую слова из маленьких латинских букв 
и возвращающую их же, но с прописной первой буквой. 
Например, print(int_func(‘text’)) -> Text.
"""


def int_func(a):
    return a.title()


print(int_func("hello world"))
